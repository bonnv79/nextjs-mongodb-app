import { useState } from 'react';
import { openError, openSuccess, postAPI } from 'utils';
import { API_POSTS } from 'constants/apiPath';
import Head from 'next/head';
import { Button, Form, Input, PageHeader, Spin } from 'antd';
import { useRouter } from 'next/router';

export default function AddPost() {
  const router = useRouter();
  const [form] = Form.useForm();
  const date = new Date();
  const [loading, setLoading] = useState(false);
  const [title, setTitle] = useState(date);
  const [content, setContent] = useState(date);

  const handlePost = () => {
    let post = {
      title,
      body: content,
      published: false,
      date: new Date().toISOString(),
    };

    postAPI(API_POSTS, {
      body: JSON.stringify(post),
    }, (data) => {
      openSuccess(data.message)

      const date = new Date();
      form.setFieldsValue({
        title: date,
        content: date,
      });
    }, (data) => {
      openError(data.message);
    }, setLoading);
  };

  return (
    <div>
      <Head>
        <title>Add post</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Spin tip="Loading..." spinning={loading}>
        <PageHeader
          ghost={false}
          onBack={() => router.back()}
          title="Add post"
        >
          <Form
            name="add-post-form"
            form={form}
            onFinish={handlePost}
            // onFinishFailed={onFinishFailed}
            autoComplete="off"
            layout="vertical"
          >
            <Form.Item
              label="Title"
              name="title"
              rules={[{ required: true, message: 'Please input your title!' }]}
              initialValue={title}
              onChange={(e) => setTitle(e.target.value)}
            >
              <Input />
            </Form.Item>

            <Form.Item
              label="Content"
              name="content"
              rules={[{ required: true, message: 'Please input your content!' }]}
              initialValue={content}
              onChange={(e) => setContent(e.target.value)}
            >
              <Input.TextArea rows={5} />
            </Form.Item>

            <Form.Item>
              <center>
                <Button type="primary" htmlType="submit">
                  Submit
                </Button>
              </center>
            </Form.Item>
          </Form>
        </PageHeader>
      </Spin>
    </div>
  );
}